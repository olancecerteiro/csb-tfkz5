{"version":3,"sources":["App.js","index.js"],"names":["configurationOptions","apiConnector","AppSearchAPIConnector","searchKey","engineName","hostIdentifier","autocompleteQuery","suggestions","types","documents","fields","size","searchQuery","search_fields","name","result_fields","snippet","fallback","genre","publisher","critic_score","raw","user_score","platform","image_url","facets","type","ranges","from","to","App","react_default","a","createElement","SearchProvider","config","className","Layout","header","SearchBox","autocompleteSuggestions","bodyContent","Results","titleField","urlField","sideContent","Sorting","label","sortOptions","value","direction","Facet","field","isFilterable","bodyHeader","Fragment","PagingInfo","ResultsPerPage","bodyFooter","Paging","rootElement","document","getElementById","ReactDOM","render"],"mappings":"oPAsBMA,UAAuB,CAC3BC,aAPgB,IAAIC,IAAsB,CAC1CC,UAAW,kCACXC,WAAY,cACZC,eAAgB,gBAKhBC,kBAAmB,CACjBC,YAAa,CACXC,MAAO,CACLC,UAAW,CAETC,OAAQ,CAAC,UAIbC,KAAM,IAGVC,YAAa,CACXC,cAAe,CAEbC,KAAM,IAGRC,cAAe,CACbD,KAAM,CAEJE,QAAS,CACPL,KAAM,GACNM,UAAU,IAGdC,MAAO,CACLF,QAAS,CACPL,KAAM,GACNM,UAAU,IAGdE,UAAW,CACTH,QAAS,CACPL,KAAM,GACNM,UAAU,IAGdG,aAAc,CAGZC,IAAK,IAEPC,WAAY,CACVD,IAAK,IAEPE,SAAU,CACRP,QAAS,CACPL,KAAM,GACNM,UAAU,IAGdO,UAAW,CACTH,IAAK,KAITI,OAAQ,CACNH,WAAY,CACVI,KAAM,QACNC,OAAQ,CACN,CAAEC,KAAM,EAAGC,GAAI,EAAGf,KAAM,YACxB,CAAEc,KAAM,EAAGC,GAAI,EAAGf,KAAM,WACxB,CAAEc,KAAM,EAAGC,GAAI,EAAGf,KAAM,eACxB,CAAEc,KAAM,EAAGC,GAAI,GAAIf,KAAM,gBAG7BM,aAAc,CACZM,KAAM,QACNC,OAAQ,CACN,CAAEC,KAAM,EAAGC,GAAI,GAAIf,KAAM,YACzB,CAAEc,KAAM,GAAIC,GAAI,GAAIf,KAAM,WAC1B,CAAEc,KAAM,GAAIC,GAAI,GAAIf,KAAM,eAC1B,CAAEc,KAAM,GAAIC,GAAI,IAAKf,KAAM,gBAG/BI,MAAO,CAAEQ,KAAM,QAASf,KAAM,KAC9BQ,UAAW,CAAEO,KAAM,QAASf,KAAM,KAClCY,SAAU,CAAEG,KAAM,QAASf,KAAM,SAKxB,SAASmB,IACtB,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAgBC,OAAQnC,GACtB+B,EAAAC,EAAAC,cAAA,OAAKG,UAAU,OACbL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CACEC,OAAQP,EAAAC,EAAAC,cAACM,EAAA,EAAD,CAAWC,yBAAyB,IAC5CC,YAAaV,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAASC,WAAW,OAAOC,SAAS,cACjDC,YACEd,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACa,EAAA,EAAD,CACEC,MAAO,UACPC,YAAa,CACX,CACElC,KAAM,YACNmC,MAAO,GACPC,UAAW,IAEb,CACEpC,KAAM,OACNmC,MAAO,OACPC,UAAW,UAIjBnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAOC,MAAM,aAAaL,MAAM,eAChChB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAOC,MAAM,eAAeL,MAAM,iBAClChB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAOC,MAAM,QAAQL,MAAM,UAC3BhB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAOC,MAAM,YAAYL,MAAM,YAAYM,cAAc,IACzDtB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAOC,MAAM,WAAWL,MAAM,cAGlCO,WACEvB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAuB,SAAA,KACExB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,MACAzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,OAGJC,WAAY3B,EAAAC,EAAAC,cAAC0B,EAAA,EAAD,UC3ItB,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOjC,EAAAC,EAAAC,cAACH,EAAD,MAAS8B","file":"static/js/main.d53fc962.chunk.js","sourcesContent":["import React from \"react\";\nimport AppSearchAPIConnector from \"@elastic/search-ui-app-search-connector\";\nimport {\n  PagingInfo,\n  ResultsPerPage,\n  Paging,\n  Facet,\n  SearchProvider,\n  Results,\n  SearchBox,\n  Sorting\n} from \"@elastic/react-search-ui\";\nimport { Layout } from \"@elastic/react-search-ui-views\";\n\nimport \"@elastic/react-search-ui-views/lib/styles/styles.css\";\n\nconst connector = new AppSearchAPIConnector({\n  searchKey: \"search-feodmjyfmqinygyb4u1y254k\",\n  engineName: \"video-games\",\n  hostIdentifier: \"host-2376rb\"\n});\n\nconst configurationOptions = {\n  apiConnector: connector,\n  autocompleteQuery: {\n    suggestions: {\n      types: {\n        documents: {\n          // Which fields to search for suggestions.\n          fields: [\"name\"]\n        }\n      },\n      // How many suggestions appear.\n      size: 5\n    }\n  },\n  searchQuery: {\n    search_fields: {\n      // 1. Search by name of video game.\n      name: {}\n    },\n    // 2. Results: name of the video game, its genre, publisher, scores, and platform.\n    result_fields: {\n      name: {\n        // A snippet means that matching search terms will be highlighted via <em> tags.\n        snippet: {\n          size: 75, // Limit the snippet to 75 characters.\n          fallback: true // Fallback to a \"raw\" result.\n        }\n      },\n      genre: {\n        snippet: {\n          size: 50,\n          fallback: true\n        }\n      },\n      publisher: {\n        snippet: {\n          size: 50,\n          fallback: true\n        }\n      },\n      critic_score: {\n        // Scores are numeric, so we won't attempt to snippet these, we'll just use the raw\n        // value.\n        raw: {}\n      },\n      user_score: {\n        raw: {}\n      },\n      platform: {\n        snippet: {\n          size: 50,\n          fallback: true\n        }\n      },\n      image_url: {\n        raw: {}\n      }\n    },\n    // 3. Facet by scores, genre, publisher, and platform, which we'll use to build filters later.\n    facets: {\n      user_score: {\n        type: \"range\",\n        ranges: [\n          { from: 0, to: 5, name: \"Not good\" },\n          { from: 5, to: 7, name: \"Not bad\" },\n          { from: 7, to: 9, name: \"Pretty good\" },\n          { from: 9, to: 10, name: \"Must play!\" }\n        ]\n      },\n      critic_score: {\n        type: \"range\",\n        ranges: [\n          { from: 0, to: 50, name: \"Not good\" },\n          { from: 50, to: 70, name: \"Not bad\" },\n          { from: 70, to: 90, name: \"Pretty good\" },\n          { from: 90, to: 100, name: \"Must play!\" }\n        ]\n      },\n      genre: { type: \"value\", size: 100 },\n      publisher: { type: \"value\", size: 100 },\n      platform: { type: \"value\", size: 100 }\n    }\n  }\n};\n\nexport default function App() {\n  return (\n    <SearchProvider config={configurationOptions}>\n      <div className=\"App\">\n        <Layout\n          header={<SearchBox autocompleteSuggestions={true} />}\n          bodyContent={<Results titleField=\"name\" urlField=\"image_url\" />}\n          sideContent={\n            <div>\n              <Sorting\n                label={\"Sort by\"}\n                sortOptions={[\n                  {\n                    name: \"Relevance\",\n                    value: \"\",\n                    direction: \"\"\n                  },\n                  {\n                    name: \"Name\",\n                    value: \"name\",\n                    direction: \"asc\"\n                  }\n                ]}\n              />\n              <Facet field=\"user_score\" label=\"User Score\" />\n              <Facet field=\"critic_score\" label=\"Critic Score\" />\n              <Facet field=\"genre\" label=\"Genre\" />\n              <Facet field=\"publisher\" label=\"Publisher\" isFilterable={true} />\n              <Facet field=\"platform\" label=\"Platform\" />\n            </div>\n          }\n          bodyHeader={\n            <>\n              <PagingInfo />\n              <ResultsPerPage />\n            </>\n          }\n          bodyFooter={<Paging />}\n        />\n      </div>\n    </SearchProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}